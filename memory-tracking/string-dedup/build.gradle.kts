/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala library project to get you started.
 * For more details take a look at the Scala plugin chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/scala_plugin.html
 */

plugins {
    // Apply the scala plugin to add support for Scala
    scala

    // Application plugin
    application
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // Use Scala 2.12 in our library project
    compile("org.scala-lang:scala-library:2.12.8")

    compile(group = "org.slf4j", name = "slf4j-api", version = "1.7.26")
    // compile(group = "org.slf4j", name = "slf4j-log4j12", version = "1.7.26")
    // compile(group = "org.apache.logging.log4j", name = "log4j-core", version = "2.12.0")
    // compile(group = "org.apache.logging.log4j", name = "log4j-1.2-api", version = "2.12.0")
    // compile(group = "org.apache.logging.log4j", name = "log4j-api", version = "2.12.0")
    compile(group = "com.typesafe.scala-logging", name = "scala-logging_2.13", version = "3.9.2")
    compile(group = "ch.qos.logback", name = "logback-classic", version = "1.2.3")

    // Use Scalatest for testing our library
    testImplementation("junit:junit:4.12")
    testImplementation("org.scalatest:scalatest_2.12:3.0.7")

    // Need scala-xml at test runtime
    testRuntimeOnly("org.scala-lang.modules:scala-xml_2.12:1.2.0")
}

application {
    // Define the main class for the application
    mainClassName = "ray.dedup.App"
}

val fatJar = task("fatJar", type = Jar::class) {
    baseName = "${project.name}-fat"
    manifest {
        attributes["Implementation-Title"] = "Gradle Jar File Example"
//        attributes["Implementation-Version"] = version
        attributes["Main-Class"] = "ray.dedup.App"
    }
    from(configurations.runtimeClasspath.get().map({ if (it.isDirectory) it else zipTree(it) }))
    with(tasks.jar.get() as CopySpec)
}

tasks {
    "build" {
        dependsOn(fatJar)
    }
}